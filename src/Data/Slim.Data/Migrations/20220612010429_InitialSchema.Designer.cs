// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Slim.Data.Entity;

#nullable disable

namespace Slim.Data.Migrations
{
    [DbContext(typeof(SlimDbContext))]
    [Migration("20220612010429_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Slim.Data.Entity.PageImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("ActualImage")
                        .HasMaxLength(500)
                        .HasColumnType("varbinary(500)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("Enabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PageImageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PageImage", (string)null);
                });

            modelBuilder.Entity("Slim.Data.Entity.PageSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("Enabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PageSectionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RazorPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RazorPageId");

                    b.ToTable("PageSection", (string)null);
                });

            modelBuilder.Entity("Slim.Data.Entity.PageSectionImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PageImageId")
                        .HasColumnType("int");

                    b.Property<int>("RazorPageId")
                        .HasColumnType("int");

                    b.Property<int>("RazorPageSectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PageImageId");

                    b.HasIndex("RazorPageId");

                    b.HasIndex("RazorPageSectionId");

                    b.ToTable("PageSectionImage", (string)null);
                });

            modelBuilder.Entity("Slim.Data.Entity.PageSectionResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RazorPageId")
                        .HasColumnType("int");

                    b.Property<int>("RazorPageSectionId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceActionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RazorPageId");

                    b.HasIndex("RazorPageSectionId");

                    b.HasIndex("ResourceActionId");

                    b.ToTable("PageSectionResource", (string)null);
                });

            modelBuilder.Entity("Slim.Data.Entity.RazorPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("Enabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("RazorPage", (string)null);
                });

            modelBuilder.Entity("Slim.Data.Entity.RazorPageResourceActionMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RazorPageId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceActionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RazorPageId" }, "NC_slim_PageResourceActionMap_PageID");

                    b.HasIndex(new[] { "ResourceActionId" }, "NC_slim_PageResourceActionMap_ResourceActionID");

                    b.ToTable("RazorPageResourceActionMap", (string)null);
                });

            modelBuilder.Entity("Slim.Data.Entity.ResourceAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("Enabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ResourceAction1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ResourceAction");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Enabled" }, "NC_slim_ResourceAction_Enabled");

                    b.HasIndex(new[] { "ResourceAction1", "Enabled" }, "NC_slim_ResourceAction_ResourceAction_Enabled");

                    b.ToTable("ResourceAction", (string)null);
                });

            modelBuilder.Entity("Slim.Data.Entity.PageSection", b =>
                {
                    b.HasOne("Slim.Data.Entity.RazorPage", "RazorPage")
                        .WithMany("PageSections")
                        .HasForeignKey("RazorPageId")
                        .IsRequired()
                        .HasConstraintName("FK_PageSection_PageId");

                    b.Navigation("RazorPage");
                });

            modelBuilder.Entity("Slim.Data.Entity.PageSectionImage", b =>
                {
                    b.HasOne("Slim.Data.Entity.PageImage", "PageImage")
                        .WithMany("PageSectionImages")
                        .HasForeignKey("PageImageId")
                        .IsRequired()
                        .HasConstraintName("FK_PageSectionImage_PageImageId");

                    b.HasOne("Slim.Data.Entity.RazorPage", "RazorPage")
                        .WithMany("PageSectionImages")
                        .HasForeignKey("RazorPageId")
                        .IsRequired()
                        .HasConstraintName("FK_PageSectionImage_PageId");

                    b.HasOne("Slim.Data.Entity.PageSection", "RazorPageSection")
                        .WithMany("PageSectionImages")
                        .HasForeignKey("RazorPageSectionId")
                        .IsRequired()
                        .HasConstraintName("FK_PageSectionImage_SectionId");

                    b.Navigation("PageImage");

                    b.Navigation("RazorPage");

                    b.Navigation("RazorPageSection");
                });

            modelBuilder.Entity("Slim.Data.Entity.PageSectionResource", b =>
                {
                    b.HasOne("Slim.Data.Entity.RazorPage", "RazorPage")
                        .WithMany("PageSectionResources")
                        .HasForeignKey("RazorPageId")
                        .IsRequired()
                        .HasConstraintName("FK_PageSectionResource_PageId");

                    b.HasOne("Slim.Data.Entity.PageSection", "RazorPageSection")
                        .WithMany("PageSectionResources")
                        .HasForeignKey("RazorPageSectionId")
                        .IsRequired()
                        .HasConstraintName("FK_PageSectionResource_SectionId");

                    b.HasOne("Slim.Data.Entity.ResourceAction", "ResourceAction")
                        .WithMany("PageSectionResources")
                        .HasForeignKey("ResourceActionId")
                        .IsRequired()
                        .HasConstraintName("FK_PageSectionResource_ResourceActionId");

                    b.Navigation("RazorPage");

                    b.Navigation("RazorPageSection");

                    b.Navigation("ResourceAction");
                });

            modelBuilder.Entity("Slim.Data.Entity.RazorPageResourceActionMap", b =>
                {
                    b.HasOne("Slim.Data.Entity.RazorPage", "RazorPage")
                        .WithMany("RazorPageResourceActionMaps")
                        .HasForeignKey("RazorPageId")
                        .IsRequired()
                        .HasConstraintName("FK_RazorPageResourceActionMap_PageId");

                    b.HasOne("Slim.Data.Entity.ResourceAction", "ResourceAction")
                        .WithMany("RazorPageResourceActionMaps")
                        .HasForeignKey("ResourceActionId")
                        .IsRequired()
                        .HasConstraintName("FK_RazorPageResourceActionMap_ResourceActionId");

                    b.Navigation("RazorPage");

                    b.Navigation("ResourceAction");
                });

            modelBuilder.Entity("Slim.Data.Entity.PageImage", b =>
                {
                    b.Navigation("PageSectionImages");
                });

            modelBuilder.Entity("Slim.Data.Entity.PageSection", b =>
                {
                    b.Navigation("PageSectionImages");

                    b.Navigation("PageSectionResources");
                });

            modelBuilder.Entity("Slim.Data.Entity.RazorPage", b =>
                {
                    b.Navigation("PageSectionImages");

                    b.Navigation("PageSectionResources");

                    b.Navigation("PageSections");

                    b.Navigation("RazorPageResourceActionMaps");
                });

            modelBuilder.Entity("Slim.Data.Entity.ResourceAction", b =>
                {
                    b.Navigation("PageSectionResources");

                    b.Navigation("RazorPageResourceActionMaps");
                });
#pragma warning restore 612, 618
        }
    }
}
